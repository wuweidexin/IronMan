<?xml version="1.0" encoding="UTF-8"?> 
<beans xmlns="http://www.springframework.org/schema/beans" 
 xmlns:context="http://www.springframework.org/schema/context" 
 xmlns:p="http://www.springframework.org/schema/p" 
 xmlns:mvc="http://www.springframework.org/schema/mvc" 
 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
 xsi:schemaLocation="http://www.springframework.org/schema/beans 
      http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
      http://www.springframework.org/schema/context 
      http://www.springframework.org/schema/context/spring-context.xsd 
      http://www.springframework.org/schema/mvc 
      http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd"> 
       
     <!-- 启动注解驱动的Spring MVC功能，注册请求url和注解POJO类方法的映射--> 
     <mvc:annotation-driven /> 
     <!-- 设置配置文件 -->
     <bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/config/config.properties" />
	</bean>
    <!-- 如果有资源文件，一定要标注出来，否则会被拦截，一定要记住 --> 
    <mvc:resources location="/views/image/" mapping="/views/image/**"/> 
	<mvc:resources location="/views/js/" mapping="/views/js/*.*"/> 
	<!--这个很重要，如果不配置这个那么DispatcherServlet中配置的就是应该有后缀的
	否则连基本的jsp文件也会被拦截 -->
	<mvc:default-servlet-handler/>
 
     <!-- 启动包扫描功能，以便注册带有@Controller、@Service、@repository、@Component等注解的类成为spring的bean --> 
     <context:component-scan base-package="com.chen.services" /> 
     <context:component-scan base-package="com.chen.dao" /> 
     <context:component-scan base-package="com.chen.controller" /> 
 
     <!-- 对模型视图名称的解析，在WEB-INF/jsp目录下找对应的jsp文件 --> 
     <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
     	<property name="prefix" value="/views/" />
		<property name="suffix" value=".jsp" />
     </bean> 
     <!-- 设置返回数据的类型以及编码 -->  
     <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">     
		<property name="messageConverters">         
			<list>             
				<bean class="org.springframework.http.converter.StringHttpMessageConverter">                 
					<property name="supportedMediaTypes">                     
						<list>                         
							<bean class="org.springframework.http.MediaType">                             
								<constructor-arg index="0" value="json" />    
								<constructor-arg index="1" value="text" />   
								<constructor-arg index="2" value="UTF-8" />                   
							</bean>                    
						</list>                 
					</property>             
				</bean>         
			</list>     
		</property> 
	</bean>
     <!-- Imports user-defined @Controller beans that process client requests -->
	<import resource="controllers.xml" />
</beans> 